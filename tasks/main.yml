---
# tasks file for ./roles/updater

# ------------------------------------------------------------------------------
- name: updater - install dependencies
  become: yes
  ansible.builtin.apt:
    pkg: "{{ item }}"
    state: present
    force_apt_get: yes # apt-get instead of aptitude
  loop: "{{ updater_dependencies|flatten(levels=1) }}"
  when: updater_config.set_timezone is defined and updater_config.set_timezone | bool
  tags:
    - updater
    - dependencies

# ------------------------------------------------------------------------------
# SET TIMEZONE
- name: set timezone
  include: set_timezone.yml
  when: updater_config.set_timezone is defined and updater_config.set_timezone | bool

# SYNC TIME
- name: sync time
  include: sync_time.yml
  when: updater_config.sync_time is defined and updater_config.sync_time | bool

# SET LANGUAGE
- name: set language
  include: set_language.yml
  when: updater_config.set_language is defined and updater_config.set_language | bool

- name: set language per user
  include: set_language_user.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when: (clients is defined and (outer_item.locale is defined or outer_item.language is defined)) and (updater_config.set_language is defined and updater_config.set_language | bool)

# ------------------------------------------------------------------------------
- name: updater - update repositories
  become: yes
  apt:
    update_cache: yes # equivalent of apt-get update
    force_apt_get: yes # apt-get instead of aptitude
    cache_valid_time: 3600
    autoremove: yes
    autoclean: yes
  when: updater_config.update_upgrade is defined and updater_config.update_upgrade | bool
  tags:
    - updater
    - update

- name: updater - upgrade packages
  become: yes
  apt:
    upgrade: dist # If yes or safe, performs an aptitude safe-upgrade.
    force_apt_get: yes # apt-get instead of aptitude
  when: updater_config.update_upgrade is defined and updater_config.update_upgrade | bool
  tags:
    - updater
    - upgrade

# ------------------------------------------------------------------------------
- name: "updater - add /etc/systemd/timesyncd.conf"
  become: yes
  ansible.builtin.copy:
    dest: /etc/systemd/timesyncd.conf
    content: |
      #  This file is part of systemd.
      #
      #  systemd is free software; you can redistribute it and/or modify it
      #  under the terms of the GNU Lesser General Public License as published by
      #  the Free Software Foundation; either version 2.1 of the License, or
      #  (at your option) any later version.
      #
      # Entries in this file show the compile time defaults.
      # You can change settings by editing this file.
      # Defaults can be restored by simply deleting this file.
      #
      # See timesyncd.conf(5) for details.

      [Time]
      NTP=time.cloudflare.com
      FallbackNTP=ntp.ubuntu.com
      #NTP=0.de.pool.ntp.org 1.de.pool.ntp.org 2.de.pool.ntp.org
      #FallbackNTP=0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org
      #RootDistanceMaxSec=5
      #PollIntervalMinSec=32
      #PollIntervalMaxSec=2048
  register: systemd_timesyncd
  tags:
    - updater
    - timesyncd

- name: restart systemd-timesyncd
  become: true
  service:
    name: systemd-timesyncd
    state: restarted
    enabled: yes
  when: systemd_timesyncd is defined and (systemd_timesyncd.changed is defined and systemd_timesyncd.changed | bool)

# ------------------------------------------------------------------------------
# SETUP TFS
- name: setup zfs
  include: setup_zfs.yml
  when: updater_config.setup_zfs is defined and updater_config.setup_zfs | bool
